name: Build and Release APK

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0, v1.1.0, etc.
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Debug secret access
        run: |
          echo "Testing secret access..."
          if [ -n "${{ secrets.GOOGLE_API_KEY }}" ]; then
            echo "GOOGLE_API_KEY is set (length: ${#GOOGLE_API_KEY})"
          else
            echo "GOOGLE_API_KEY is not set"
          fi
          if [ -n "${{ secrets.STADIA_MAPS_API_KEY }}" ]; then
            echo "STADIA_MAPS_API_KEY is set (length: ${#STADIA_MAPS_API_KEY})"
          else
            echo "STADIA_MAPS_API_KEY is not set"
          fi
          if [ -n "${{ secrets.SYNCFUSION_LICENSE_KEY }}" ]; then
            echo "SYNCFUSION_LICENSE_KEY is set (length: ${#SYNCFUSION_LICENSE_KEY})"
          else
            echo "SYNCFUSION_LICENSE_KEY is not set"
          fi
        
      - name: Create API config for build
        run: |
          mkdir -p lib/config
          cat > lib/config/api_config.dart << EOF
          class ApiConfig {
            // API keys from GitHub Secrets
            static const String stadiaMapsApiKey = '${{ secrets.STADIA_MAPS_API_KEY }}';
            static const String googleApiKey = '${{ secrets.GOOGLE_API_KEY }}';
            static const String syncfusionLicenseKey = '${{ secrets.SYNCFUSION_LICENSE_KEY }}';
            
            // Check if a valid SyncFusion license key is configured
            static bool get hasValidSyncfusionLicense => syncfusionLicenseKey.isNotEmpty;
            
            // Base URLs for Stadia Maps tiles
            static String get lightTileUrl => 
              'https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png?api_key=\$stadiaMapsApiKey';
            
            static String get darkTileUrl => 
              'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png?api_key=\$stadiaMapsApiKey';
          }
          EOF
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Create Release and Upload APK
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ./build/app/outputs/flutter-apk/app-release.apk
          name: South Dakota Weather App ${{ github.ref_name }}
          body_path: RELEASE_NOTES_${{ github.ref_name }}.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK artifact (non-tag runs)
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: ./build/app/outputs/flutter-apk/app-release.apk