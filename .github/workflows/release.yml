name: Build and Release APK

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0, v1.1.0, etc.

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Debug secret access
        run: |
          echo "Testing secret access..."
          if [ -n "${{ secrets.GOOGLE_API_KEY }}" ]; then
            echo "GOOGLE_API_KEY is set (length: ${#GOOGLE_API_KEY})"
          else
            echo "GOOGLE_API_KEY is not set"
          fi
          if [ -n "${{ secrets.STADIA_MAPS_API_KEY }}" ]; then
            echo "STADIA_MAPS_API_KEY is set (length: ${#STADIA_MAPS_API_KEY})"
          else
            echo "STADIA_MAPS_API_KEY is not set"
          fi
        
      - name: Create API config for build
        run: |
          mkdir -p lib/config
          cat > lib/config/api_config.dart << 'EOF'
          class ApiConfig {
            // API keys from GitHub Secrets
            static const String stadiaMapsApiKey = '${{ secrets.STADIA_MAPS_API_KEY }}';
            static const String googleApiKey = '${{ secrets.GOOGLE_API_KEY }}';
            
            // Base URLs for Stadia Maps tiles
            static String get lightTileUrl => 
              'https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png?api_key=\$stadiaMapsApiKey';
            
            static String get darkTileUrl => 
              'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png?api_key=\$stadiaMapsApiKey';
          }
          EOF
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: South Dakota Weather App ${{ github.ref_name }}
          body: |
            ## South Dakota Weather App v${{ github.ref_name }}
            
            ### What's New
            - Latest version of the South Dakota Weather App
            - Built for Android devices
            - Includes real weather data functionality
            
            ### Installation
            1. Download the APK file above
            2. Enable "Install from Unknown Sources" in your Android settings
            3. Install the APK file
            
            ### Features
            - Real-time weather data for South Dakota cities
            - National Weather Service alerts
            - Hourly and daily forecasts
            - Weather radar
            - Area Forecast Discussions (AFD)
            - Storm Prediction Center outlooks
            
            ### System Requirements
            - Android 5.0 (API level 21) or higher
            
            ### Support
            If you encounter any issues, please report them on the GitHub repository.
          draft: false
          prerelease: false
          
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: sodak-weather-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive 